// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Book {
  id String @id @default (uuid())
  title String @unique
  price Float
  description String
  isbn String @unique
  genre String
  book_img String
  author_id String?
  author Author? @relation(fields: [author_id], references: [id])
  publication_date DateTime
  availability Boolean
  ratings Float
  publisher_id String?
  publisher Publisher? @relation(fields: [publisher_id], references: [id])
  reviews Reviews[]
  cartItem ShoppingCartItem?
  // distributors BookDistributers
  @@unique([title, isbn])
  
}

model Author {
  id String @id @default(uuid())
  f_name String
  l_name String
  author_image String
  books Book[]
  email String @unique
  @@unique([f_name, l_name])

}


model Reviews {
  id String @id @default(uuid())
  book_id String
  review_text String
  book Book @relation(fields: [book_id], references: [id])
  user_id String
  user User? @relation(fields: [user_id], references: [id])
}



model Publisher {
  id String @id @default(uuid())
  published_books Book[]
  address String
  name String
  publisher_logo String
}


// model BookDistributers {
//   id String @id @default(uuid())
//   publisher_id String
//   stocks Int
//   books Books[]
// }

model User {
  id String @id @default(uuid())
  profileImage String
  email String @unique
  password String
  confirmPassword String?
  f_name String
  l_name String
  bookReviews Reviews[]
  passwordChangedAt DateTime?
  role Roles @default(USER)
  passwordResetToken String?
  passwordExpireTime String?
  cart_id String @unique
  cart Cart? @relation(fields: [cart_id], references: [id])

  
}
enum Roles {
  USER
  ADMIN
}



model Cart {
  id String @id @default(uuid())
  created_at DateTime @default(now())
  quantity Int
  totalPrice Int
  cartItem ShoppingCartItem[] 
  User User?
 }

model ShoppingCartItem {
  id String @id @default(uuid())
  book_id String @unique
  cart_id String
  quantity Int
  totalPrice Int
  book Book @relation(fields: [book_id], references: [id])
  cart Cart @relation(fields: [cart_id], references: [id])
}


// model Order {
//   id String @id @default(uuid())
//   user_id String @unique
//   shipping_address String
//   payment_method String
//   status String
//   created_at DateTime @default(now())
//   user User @relation(fields: [user_id], references: [id])


// }

// model OrderItem {
//   id String @id @default(uuid())
//   order_id String
//   book_id String
//   quantity Int
// }

